Class BD_Cacodemon : BDoomMonster  {
	Default	{
		species "Cacodemon";
		Health 400;
		Radius 31;
		Height 56;
		Mass 400;
		Speed 8;
		PainChance 128;
		Monster;
		+FLOAT +NOGRAVITY
		SeeSound "caco/sight";
		PainSound "caco/pain";
		DeathSound "caco/death";
		ActiveSound "caco/active";
		Obituary "$OB_CACO";
		HitObituary "$OB_CACOHIT";
		Tag "$FN_CACO";
		+FORCEXYBILLBOARD
		bloodcolor "00 00 CC";
		gibhealth 50;
		+FLOATBOB
		FloatBobStrength 0.35;
		BDoomMonster.smokeheight 30;
	}
	override void Tick() {
		super.Tick();
		if (!InStateSequence(curstate,FindState("Spawn")))
			bFLOATBOB = false;
	}
	/*void BD_HeadAttack() {
		if (bdoom_projectiles < 1)
			A_HeadAttack();
		else
			A_CustomComboAttack("BD_CacodemonBall", 32, 10 * random(1, 6));
	}*/
	states	{
	Spawn:
		HEA1 AAAAA 10 A_Look();
		HEA1 B 5 A_Look();
		HEA1 C 5;
		HEA1 B 5 A_Look();
		HEA1 A 5;
		loop;
	See:
		HEA1 AAAAAAAAAA 3 A_Chase();
		HEA1 BCBA 3 A_Chase();
		loop;
	Missile:
		HEAA ABCCDD 1 A_FaceTarget();
		HEAA E 4 A_HeadAttack;
		HEAA CCA 1;
		Goto See;
	Pain:
		HEAA F 3;
		HEAA G 3 A_Pain();
		HEAA HGF 2;
		Goto See;
	Crush:
		CRS2 B -1;
		stop;
	Death:
		TNT1 A 0 {
			bSPRITEFLIP = random[bdsfx](0,1);
			bFORCEXYBILLBOARD = false;
			if (burning)
				return ResolveState("Death.Vanilla");
			return A_jump(256,"Death.Vanilla","Death1", "Death2");
			return ResolveState(null);	
		}
	Death.Vanilla:	
		HEAM A 3 BD_Bleed();
		HEAM B 3 A_Scream();
		HEAM CD 3 BD_Bleed();
		HEAM E 3 A_NoBlocking();
		HEAM F 3 A_SetFloorClip();
		HEAM GHI 3;
		goto deathbleed;
	Death1: //no eye, intestines fall down
		HEAN AB 3;
		TNT1 A 0 A_Scream();
		HEAN C 3 {
			if (bdoom_gibs && !burning)
				A_SpawnItemEx("BD_CacoEye",frandom(-2,2),frandom(-2,2),frandom(28,32),frandom(2,5),0,frandom(0,5),frandom(-10,10),SXF_SETTARGET);
		}
		 TNT1 A 0 BD_Bleed();
		HEAN DE 3;
		HEAN F 3 A_NoBlocking();
		 TNT1 A 0 BD_Bleed();
		HEAN GHIJKL 3;
		TNT1 A 0 A_SetFloorClip();
		HEAN MNO 5;
		goto deathbleed;
	Death2: //puke gibs, less common death
		TNT1 A 0 {
			if (!bdoom_gibs || random(1,3) == 3)
				return ResolveState ("Death");
			bNOGRAVITY = true; 
			return ResolveState (null);
		}
		HEAP ABC 4;
		TNT1 A 0 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacoEye",frandom(-2,2),frandom(-2,2),frandom(28,32),frandom(2,5),0,frandom(0,5),frandom(-10,10),SXF_SETTARGET);
		}
		HEAP CCDDEEFF 2 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacodemonMeatPiece",0,frandom(-6,6),frandom(8,20),	frandom(3,5),0,frandom(2,3),	random(-15,15),	SXF_SETTARGET,48);
			}
		TNT1 A 0 {
			A_NoBlocking();
			bNOGRAVITY = false;
		}
		HEAP GJ 4;
		HEAP I 4 A_SetFloorClip();
		HEAP JKL 4;
		goto deathbleed;
	Death.Saw:
		TNT1 A 0 { bNOGRAVITY = true; } // Prevent from auto-unsetting, it should hover for a bit
		HEAY ABCDE 3 A_FaceTarget();
		TNT1 A 0 {
			A_SpawnItemEx("BD_CacoInnards", 4, flags: SXF_SETTARGET);
			A_NoBlocking();
			A_Scream();
		}
		HEAY FGHI 2 {
			A_SetTics(random[caco](2,4));
			BD_Bleed();
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacodemonMeatPiece", frandom[caco](-6,6), frandom[caco](-6,6), flags: SXF_SETTARGET, failchance: 128);
		}
		HEAY J 2 { bNOGRAVITY = false; }
		HEAY K 2 {
			if (pos.z <= floorz || waterlevel > 0)
				return ResolveState("Death.SawEnd");
			return ResolveState(null);
		}
		wait;
	Death.SawEnd:
		TNT1 A 0 A_SetFloorClip();
		HEAY LMNOP 2;
		goto deathbleed;
	XDeath: //sprite gibbing from Smooth Doom with added particles
		TNT1 A 0 A_Jump(128,"Death");
		HEAX ABC 3 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacodemonMeatPiece",frandom(-6,6),frandom(-6,6),frandom(8,20),	frandom(-6,6),frandom(-6,6),frandom(4,6), 0,	SXF_SETTARGET,48);
		}
		TNT1 A 0 A_XScream();
		HEAX DEF 3 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacodemonMeatPiece",frandom(-6,6),frandom(-6,6),frandom(8,20),	frandom(-6,6),frandom(-6,6),frandom(4,6), 0,	SXF_SETTARGET,48);
		}
		TNT1 A 0 {
			A_NoBlocking();
			A_SetFloorClip();
		}
		HEAX GH 2 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_CacodemonMeatPiece",frandom(-6,6),frandom(-6,6),frandom(8,20),	frandom(-6,6),frandom(-6,6),frandom(4,6), 0,	SXF_SETTARGET,48);
		}
		HEAX IJKLMNOPQRS 2;
		goto deathbleed;
	}
}

Class BD_CacoRedTrail : BD_BaseFlare {
	Default {
		alpha 0.8;
		scale 0.05;
	}
	states	{
	Spawn:
		LENR A 1 {
			A_FadeOut(0.2);
			scale*=0.95;
		}
		loop;
	}
}

Class BD_CacoBlueTrail : BD_BaseFlare {
	Default {
		alpha 0.8;
		scale 0.1;
	}
	states {
	Spawn:
		LENB A 1 {
			A_FadeOut(0.2);
			scale*=0.95;
		}
		loop;
	}
}

Class BD_CacodemonBall : CacodemonBall {
	int broll;
	Default {
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		-ROLLCENTER
		-ZDOOMTRANS
		decal "Scorch";
		renderstyle "Add";
		alpha 1.0;
		scale 0.17;
		//seesound "";
	}
	override void PostBeginPlay () {
		super.PostBeginPlay();
		scale.x*= randompick[bdsfx](-1,1);
		scale.y*= randompick[bdsfx](-1,1);
		roll = random[bdsfx](0,360);
		broll = random[bdsfx](4,6)*randompick[bdsfx](1,-1);
		A_StartSound("electric/hum",slot:CHAN_6,flags:CHANF_DEFAULT|CHANF_LOOPING,attenuation:4);
		if (bdoom_projectiles < 2) {			
			frame = random[bdsfx](0,1);
			alpha = 1;
			A_SetScale(1,1.1);
		}
		else {
			A_AttachLightDef('cacored',"CACOBALL_R");
			A_AttachLightDef('cacoblue',"CACOBALL_B");
		}
		if (bdoom_debris) {
			let f = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
			f.fcolor = 'blue';
			f.scale = (0.21,0.21);
			f.alpha = 0.3;
			f.master = self;
			if (bdoom_projectiles == 2) {
				let lt = BD_CacoBallLightning(Spawn("BD_CacoBallLightning",pos));
				if (lt) 
					lt.master = self;				
				let lt1 = BD_CacoBallLightning(Spawn("BD_CacoBallLightning",pos));
				if (lt1) {
					lt1.master = self;
					lt1.upward = true;
				}
			}
		}
	}	
	override void Tick () {
		Vector3 oldPos = self.pos;    
		Super.Tick();
		if (!bdoom_debris || bdoom_projectiles < 2 || isFrozen())
			return;
		Vector3 path = level.vec3Diff( self.pos, oldPos );
		double distance = path.length() / 3; //this determines how far apart the particles are
		Vector3 direction = path / distance;
		int steps = int( distance );
		
		for( int i = 0; i < steps; i++ )  {
			Spawn("BD_CacoRedTrail", oldPos );
			Spawn("BD_CacoBlueTrail", oldPos );
			oldPos = level.vec3Offset( oldPos, direction );
		}
	}
	States	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(bdoom_projectiles < 2,"Spawn.Classic");
		ELBA ABCDEFGHIJKLMNO 1 bright {
			roll += broll;
		}
		loop;
	Spawn.Classic:
		BAL2 # 1 bright {
			roll += broll;
		}
		loop;
	Death:
		TNT1 a 0 {
			A_StopSound(CHAN_6);
			A_RemoveChildren(true,RMVF_EVERYTHING);
			A_RemoveLight('cacored');
			A_RemoveLight('cacoblue');
			A_AttachLightDef('cacoex',"XCACOBALL");
			if (bdoom_projectiles < 2)
				return ResolveState("Death.Classic");
			A_Setscale(0.55,0.6);
			alpha = 0.8;
			if (bdoom_debris) {
				for (int i = random[bdsfx](4,7); i > 0; i--)
					A_SpawnItemEx(
						"BD_CacoBallPiece",
						frandom[bdsfx](-6,6),frandom[bdsfx](-6,6),frandom[bdsfx](-6,6),
						frandom[bdsfx](-2,2),frandom[bdsfx](-2,2),frandom[bdsfx](2,4)
					);
				let f = BD_BaseFlare(Spawn("BD_BaseFlare",pos));
				if (f) {
					f.fcolor = 'blue';
					f.scale = (0.24,0.24);
					f.alpha = 0.8;
					tracer = f;
				}
			}
			return ResolveState(null);
		}
		ELBY ABCDEFGH 1 bright {
			//A_FadeOut(0.01);
			if (tracer) {
				tracer.scale*=0.9;
				tracer.A_FadeOut(0.1);
			}
		}
		TNT1 A 0 {
			if(tracer)
				tracer.destroy();
		}
		stop;
	Death.Classic:
		//TNT1 A 0 { roll = 0; }
		BPCA ABCDEF 2 bright;
		stop;
	}
}

Class BD_CacoballRay : BD_BaseFlare {
	Default {
		alpha 0.8;
		scale 0.02;
	}
	states	{
	Spawn:
		PEXP ABCDEF 1 bright A_FadeOut(0.0025);
		PEXP GHIJKLM 2 bright A_FadeOut(0.0025);
		stop;
	}
}

Class BD_CacoBallLightning : BD_BaseFlare {
	bool upward;
	double ceilz;
	double flrz;
	Default {
		scale 0.12;
		alpha 0.0;
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		if (!master) {
			destroy();
			return;
		}
		if (level.time % random(10,20) != 0)
			return;
		ceilz = master.ceilingz;
		flrz = master.floorz;
		if (upward) {
			scale.y = (pos.z - ceilz) * 0.00375;
			if (ceilz < pos.z || ceilz - pos.z > 72 || master.ceilingpic == skyflatnum)
				alpha = Clamp(alpha-0.025,0,0.5);
			else {
				alpha = Clamp(alpha+0.1,0,0.5);
				A_StartSound("world/spark",flags:CHANF_DEFAULT,volume:0.8,attenuation:2);
				for (int i = random(1,3); i > 0; i --) {
					let piece = BD_CacoBallPiece(Spawn("BD_CacoBallPiece",(pos.x+frandom(-3,3),pos.y+frandom(-3,3),ceilz-0.5)));
					if (piece) 
						piece.vel = (frandom(-3,3),frandom(-3,3),0);
				}
			}
		}
		else {
			scale.y = (pos.z - flrz) * 0.00375;
			if (flrz > pos.z || pos.z - flrz > 44 || master.floorpic == skyflatnum)
				alpha = Clamp(alpha-0.025,0,0.5);
			else {
				alpha = Clamp(alpha+0.1,0,0.5);
				A_StartSound("world/spark",flags:CHANF_DEFAULT,volume:0.8,attenuation:2);
				for (int i = random(1,3); i > 0; i --) {
					let piece = BD_CacoBallPiece(Spawn("BD_CacoBallPiece",(pos.x+frandom(-3,3),pos.y+frandom(-3,3),flrz+0.5)));
					if (piece) 
						piece.vel = (frandom(-2,2),frandom(-2,2),frandom(2,4));
				}
			}
		}
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();	
		if (master) {
			Warp(master,-10);
			vel = master.vel;
			moving = true;
		}
	}
	states	{
	Spawn:
		CLTN ABCDEFGH 2;
		loop;
	}
}

Class BD_CacoBallPiece : BD_RicochetSpark {
	Default {
		alpha 1.0;
		scale 0.065;
		gravity 0.8;
	}
	states {
	Spawn:
		SPRK C 1 bright	{
			A_FadeOut(0.03);
			scale *= 0.92;
		}
		wait;
	}
}
