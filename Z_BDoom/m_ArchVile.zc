Class BD_ArchVile : BDoomMonster {
	protected state mmissiledo;
	protected state hheal;
	Default	{
		species "Archvile";
		Health 700;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 15;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		+QUICKTORETALIATE 
		+FLOORCLIP 
		+NOTARGET
		SeeSound "vile/sight";
		PainSound "vile/pain";
		DeathSound "vile/death";
		ActiveSound "vile/active";
		MeleeSound "vile/stop";
		Obituary "$OB_VILE";
		Tag "$FN_ARCH";
		gibhealth 60;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		mmissiledo = FindState("MissileDo");
		hheal = FindState("Heal");
	}
	override void Tick () {
		super.Tick();
		if (isFrozen())
			return;
		else if (!bdoom_flames)
			return;
		if ( InStateSequence(curstate,ssee)
			||InStateSequence(curstate,ppain) ) {
			A_SpawnItemEx("BD_ArchFlameParticle",frandom(-20,-10),frandom(-10,10),frandom(24,70),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.2,0.6));
			A_SpawnItemEx("BD_ArchFlameParticle",frandom(-20,-10),frandom(-10,10),frandom(24,70),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.2,0.6));
		}		
		else if ( (InStateSequence(curstate,mmissile) || InStateSequence(curstate,hheal)) && !InStateSequence(curstate,mmissiledo)) {
			A_SpawnItemEx("BD_ReverseArchFlameParticle",randompick(frandom(-32,-40),frandom(32,40)),randompick(frandom(-32,-40),frandom(32,40)),frandom(8,96),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_ReverseArchFlameParticle",randompick(frandom(-32,-40),frandom(32,40)),randompick(frandom(-32,-40),frandom(32,40)),frandom(8,96),flags:SXF_SETTARGET);
		}		
			
	}
	states {
		Death.Fire:
			stop;
		Death.Greenfire:
			stop;
		Death.PlasmaDamage:
			stop;
		Raise:
			stop;
		Spawn:
			VILI ABB 10 A_Look;
			Loop;
		See:
			VILW abcdeefghijj 2 a_vilechase;
			Loop;
		Missile:
			TNT1 A 0 	A_VileStart();		
			NVIL ABCDE 2  {
				A_FaceTarget();
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",-24,-28,frandom(78,82),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",-24, 28,frandom(78,82),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
				
			NVIL F 2  {			
				if (bdoom_flames) {
					A_SpawnProjectile("BD_ArchFlameSeeker");
					A_VileTarget("BD_ArchvileFire");
					A_SpawnItemEx("BD_ParticleFire_Yellow",-8,-22,frandom(70,82),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",-8, 22,frandom(70,82),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",-8, 22,frandom(70,82),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
				else 
					A_VileTarget();
			}
			NVIL G 2  {
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",-4,-18,48,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",-4, 18,48,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
			NVIL H 2  {
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",0,-20,44,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",0, 20,44,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
			NVIL I 2  {
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",0,-16,40,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",0, 16,40,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
				
			NVIL I 2  {
				A_FaceTarget();
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",0,-10,40,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",0, 10,40,frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
			NVIL JKKKKKKKKKKKKKKLLMM 2  {
				A_FaceTarget();
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",4,frandom(-1.5,1.5),frandom(37,40),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",4,frandom(-1.5,1.5),frandom(37,40),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.9,1.4));
				}
			}
		MissileDo:
			TNT1 A 0 A_VileAttack(flags:VAF_DMGTYPEAPPLYTODIRECT);
			NVIL NNOO 2  {
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",36,frandom(-1.5,1.5),frandom(37,40),frandom(-2.2,2.2),frandom(-2.2,2.2),frandom(-1,2));
					A_SpawnItemEx("BD_ParticleFire_Yellow",36,frandom(-1.5,1.5),frandom(37,40),frandom(-2.2,2.2),frandom(-2.2,2.2),frandom(-1,2));
					A_SpawnItemEx("BD_ParticleFire_Yellow",36,frandom(-1.5,1.5),frandom(37,40),frandom(-2.2,2.2),frandom(-2.2,2.2),frandom(-1,2));
					A_SpawnItemEx("BD_ArchFlameParticle",36,frandom(-1.5,1.5),frandom(37,40), frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2,3.4),0,0,0);
					A_SpawnItemEx("BD_ArchFlameParticle",36,frandom(-1.5,1.5),frandom(37,40), frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2,3.4),0,0,0);
					A_SpawnItemEx("BD_ArchFlameParticle",36,frandom(-1.5,1.5),frandom(37,40), frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2,3.4),0,0,0);
					A_SpawnItemEx("BD_ArchFlameParticle",36,frandom(-1.5,1.5),frandom(37,40), frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-2,3.4),0,0,0);
				}
			}
			NVIL PPQQ 2  {
				if (bdoom_flames) {
					A_SpawnItemEx("BD_ParticleFire_Yellow",36,frandom(-1.5,1.5),frandom(37,40),frandom(-1.5,1.5),frandom(-1.5,1.5),frandom(-0.6,1.4));
					A_SpawnItemEx("BD_ParticleFire_Yellow",36,frandom(-1.5,1.5),frandom(37,40),frandom(-1.5,1.5),frandom(-1.5,1.5),frandom(-0.6,1.4));
				}
			}
			NVIL R 2;
			NVIR ABCDE 2;
			NVIR E 8;
			Goto See;
		Heal:
			TNT1 A 0 A_SpawnItemEx("BD_ArchPentagram",32,0);
			VIL1 xxyzyxxyzy 3 ;
			goto see;
		Pain:
			VILP a 3;
			VILP b 7 a_pain;
			Goto See;
		Death:
			TNT1 A 0 {
				bSPRITEFLIP = random[bdsfx](0,1);
			}
			VILM A 3;
			VILM B 3 A_Scream;
			VILM C 3 A_NoBlocking;
			VILM DEF 3;
			VILM GHIJKLM 3 BD_Bleed;
			goto deathbleed;
		XDeath:
			TNT1 A 0 {
				return A_jump(96,"Death");
				bSPRITEFLIP = random[bdsfx](0,1);
				return ResolveState(null);
			}
			VILX A 3;
			VILX b 2 a_scream;
			VILX c 2 a_noblocking;
			VILX defghijklmnop 2 BD_Bleed();
			VILX q 1;
			goto deathbleed;
		Crush:
			CRS2 A -1;
			stop;
		}
}
	

Class BD_ArchvileFire : ArchvileFire {
	Default {
		damagetype "Fire";
		renderstyle "Add";
		alpha 0.8;
		scale 0.35;
		+BRIGHT
	}
	override void Tick() {
		Super.Tick();
		if (isFrozen())
			return;
		if (!tracer || !target || !target.Checksight(tracer,0))
			A_FadeOut(0.1);
		else if (tracer && target)
			Warp(tracer,32,8,0,WARPF_INTERPOLATE);
		if (sprite == GetSpriteIndex("TNT1"))
			A_SpawnItemEx("BD_ParticleFire_Yellow",frandom(-10,10),frandom(-10,10),frandom(0,5),frandom(-0.4,0.4),frandom(-0.4,0.4),frandom(0.8,1.5));
	}
	States
		{
		Spawn:
			TNT1 A 48 NoDelay A_StartSound("archvile/flameprep"); //A_StartFire;
			TNT1 A 0 A_StartSound("archvile/flameexplosion"); //A_StartFire;
			BOM6 ABCDEFGHHIJKLMNOPQRST 1 A_FadeOut(0.02);
			stop;
		End:
			FIPR BCDE 2;
			TNT1 A 0 A_StartSound("archvile/flameexplosion"); //A_StartFire;
			FIPR FGHIJKLMNOPQRS 2;
			stop;
		}
}

Class BD_ArchFlameSeeker : Actor {
	int ftimer;
	double tdist;
	double fspeed;
	Default {
		projectile;
		+SEEKERMISSILE
		+FLOORHUGGER
		+THRUACTORS
		speed 20;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		ftimer = 42;
		if (target && target.tracer)
			tracer = target.tracer;
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		if (!target || !(target is "BD_ArchVile") || !tracer || ftimer < 1) {
			destroy();
			return;
		}
		tdist = Distance2D(tracer);
		if (tdist < tracer.radius)
			SetOrigin((tracer.pos.x,tracer.pos.y,floorz),true);
		fspeed = tdist / ftimer;
		A_ChangeVelocity(fspeed,0,0,CVF_RELATIVE|CVF_REPLACE);
		ftimer--;	
	}
	states {
	Spawn:
		TNT1 A 1 NoDelay {
			if (tracer) 
				A_FaceTracer(20,flags:FAF_BOTTOM);
			let flame = Spawn("BD_ArchFlameSeekerTrail",pos);
			if (flame && target) {
				flame.master = self;
				//flame.scale = 
			}
		}
		loop;
	}
}

Class BD_ArchFlameSeekerTrail : BD_BaseParticleFire {
	BD_BaseFlare flare;
	Default {
		scale 0.4;
		alpha 0.8;
		+RELATIVETOFLOOR
		+MOVEWITHSECTOR
		+BRIGHT
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		flare = BD_BaseFlare(Spawn("BD_BaseFlare",pos));
		if (!flare) return;
		flare.fcolor = "yellow";
		flare.A_SetScale(0.2);
		flare.alpha = 0.2;
	}
	states {
	Spawn:
		FIPY AB 3;
	Idle:
		FIPY CDEFGHIJ 3 {
			if (!master)
				return ResolveState("End");
			return ResolveState(null);
		}
		loop;
	End:
		FIPY KKLL 2 {
			if (flare)
				flare.A_FadeOut(0.04);
		}
		FIPY MM 2 {
			if (flare)
				flare.A_FadeOut(0.04);
			for (int i = random(2,3); i > 0; i--)
				A_SpawnParticle(
					Color(0xff,0x65+random(0,100),0x00),
					SPF_FULLBRIGHT|SPF_RELVEL|SPF_RELACCEL,
					lifetime:100,size:frandom(4,6),
					angle:frandom(0,359),
					xoff:frandom(-3,3),yoff:frandom(-3,3),zoff:frandom(4,12),
					velx:frandom(1,3),velz:frandom(0,2),	accelx:-0.1,accelz:-0.08,
					startalphaf:0.9,sizestep:-0.2
				);
		}
		stop;
	}
}
	

//these raise above the pentagram as well as float behind Archie when he's walking around
Class BD_ArchFlameParticle : BD_BaseFlare {
	Default {
		alpha 0.65;
		scale 0.04;
	}
	states
		{
		Spawn:
			SPRK A 1 bright Nodelay {
				A_FadeOut(0.01);
				scale*=0.95;
			}
			wait;
	}
}

//these fade in and fly towards the Archie as he's gathering strength to burn you
Class BD_ReverseArchFlameParticle : BD_BaseFlare {
	Default {
		alpha 0.0;
		scale 0.01;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		if (!target) {
			self.destroy();
			return;
		}
		vector3 dir = level.Vec3Diff (pos, target.pos + (0, 0, target.height / 2.));
		vel = dir.unit() * 3;
		moving = true;
	}
	states {
	Spawn:
		SPRK DDDDDDDDDD 1 bright Nodelay {
			scale.x = clamp(scale.x+0.005,0.01,0.06);
			scale.y = clamp(scale.y+0.005,0.01,0.06);
			A_FadeIn(0.05);
		}
		SPRK D 1 bright {
			A_Fadeout(0.1);
		}
		wait;			
	}
}


//rotating pentagram that appears below resurrecting monsters
Class BD_ArchPentagram : Actor {
	Default {
		+NOINTERACTION
		+FLATSPRITE
		+ROLLSPRITE
		renderstyle "Add";
		alpha 0.9;
		scale 0.27;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		SetOrigin((pos.x,pos.y,floorz),0);
	}
	states
		{
		Spawn:
			PNTG A 1 bright NoDelay {
				roll+=1;
				if (bdoom_flames)
					A_SpawnItemEx("BD_ArchFlameParticle",frandom(-17,17),frandom(-17,17),1,frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(0.5,1),0,0,80);
				A_FadeOut(0.012);
			}
			loop;
	}
}


