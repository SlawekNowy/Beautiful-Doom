Class BD_Demon : BDoomMonster {
	Default 	{
		species "Demon";
		Health 150;
		gibhealth 40;
		PainChance 180;
		Speed 10;
		Radius 30;
		Height 56;
		Mass 400;
		Monster;
		+FLOORCLIP
		SeeSound "demon/sight";
		AttackSound "demon/melee";
		PainSound "demon/pain";
		DeathSound "demon/death";
		ActiveSound "demon/active";
		Obituary "$OB_DEMONHIT";
		Tag "$FN_DEMON";
	}
	states	{
		Spawn:
			SSRG MN 10 fast A_Look();
			loop;
		See:
			SSRG AABCDDEF 2 fast A_Chase();
			loop;
		Crush:
			CRS1 A -1;
			stop;
		Melee:
			SSRG G 8 fast A_FaceTarget();
			SSRG GGGHIII 1 fast A_FaceTarget();
			SSRG J 1 fast;
			SSRG K 1 fast A_SargAttack();
			SSRG L 4 fast;
			SSRG G 3 fast;
			Goto See;
		Pain:
			SSRG M 1 fast;
			SSRG N 2 fast;
			SSRG M 1 fast A_Pain();
			Goto See;
		Death:
			TNT1 A 0 {
				scale.x *= randompick[bdsfx](-1,1);
				if (!burning && random(1,4) == 1)
					return resolvestate("Death1");
				if (!burning && health < -20 && random(1,3) == 1)
					return resolvestate("Death2");
				return resolvestate(null);
			}
			SSRM A 3 BD_Bleed();
			SSRM B 3 A_Scream();
			SSRM C 3;
			SSRM D 3 A_NoBlocking();
			SSRM E 3 BD_Bleed();
			SSRM F 3;
			SSRM G 3 BD_Bleed();
			SSRM HI 3;
			goto deathbleed;
		Death1: //lose hand
			SSRN A 3 BD_Bleed();
			SSRN B 3 A_Scream();
			SSRN C 3 A_SpawnItemEx("BD_Gib_Hand",0,20*scale.x,25,	vel.x*0.35,frandom(2,3)*scale.x,frandom(2,3),0,	SXF_SETTARGET);
			SSRN D 3 A_NoBlocking();
			SSRN E 3 BD_Bleed();
			SSRN F 3;
			SSRN G 3 BD_Bleed();
			SSRN HIJ 3;
			goto deathbleed;
		Death2: //lose head (rare)
			SSRM A 3 BD_Bleed();
			SSRM B 3;
			SSRM C 3 A_Scream();
			SSRM D 3 A_NoBlocking();
			SARD E 3 A_SpawnItemEx("BD_Gib_Head",frandom(-2,2),frandom(-2,2),frandom(50,54),frandom(2,5),0,frandom(1,3),random(150,210),SXF_SETTARGET);
			SARD F 3;
			SARD G 3 BD_Bleed();
			SARD HIJ 3;
			SARD JJJJJ random(7,11) {
				if (random(0,100) < 40) {
					A_StartSound("gibs/bloodspurt");
					A_SpawnItemEx("BD_NeckSpurt",frandom(-0.3,0.3),frandom(-7.5,-7.8)*scale.x,14,0,0,0,0,SXF_SETTARGET,32);
				}
			}
			goto deathbleed;
		XDeath:
			TNT1 A 0 {
				scale.x *= randompick[bdsfx](-1,1);
			}
			SSRX A 3 BD_Bleed();
			SSRX B 3;
			SSRX C 3 A_Scream();
			TNT1 A 0 {
				for (int i = random(3,6); i > 0; i--) {
					let meat = BD_BasicMeatPiece(Spawn("BD_BasicMeatPiece", (pos.x + frandom(-4,4), pos.y + frandom(-4,4), pos.z + frandom(12,22))));
					if (meat) {
						meat.vel = (frandom(-3,3),frandom(-3,3),frandom(2,6));
						meat.target = self;
						meatlist.push(meat);
					}
				}
			}
			SSRX D 3 A_NoBlocking();
			SSRX EFGH 3	BD_Bleed();
			SSRX HIJK 3;
			goto deathbleed;
		Death.Saw:
			TNT1 A 0 {
				scale.x *= randompick[bdsfx](-1,1);
			}
			SARY ABC 3;
			TNT1 A 0 {
				A_NoBlocking();
				A_FaceTarget();
			}
			SARY DEFG 3 A_SpawnItemEx("BD_Blood",1,0,frandom(22,42),frandom(2,4),0,frandom(4,6),random(-10,-15),SXF_SETTARGET);
			SARY H 3 {
				A_StartSound("gibs/meatland",slot:CHAN_7);
				A_StartSound("body/fall",slot:CHAN_6);
			}
			SARY IJKLMNOPQ 3;
			goto deathbleed;
	}
}

Class BD_Spectre : BD_Demon  {
	Default	{
		+SHADOW
		RenderStyle "OptFuzzy";
		Alpha 0.5;
		SeeSound "spectre/sight";
		AttackSound "spectre/melee";
		PainSound "spectre/pain";
		DeathSound "spectre/death";
		ActiveSound "spectre/active";
		HitObituary "$OB_SPECTREHIT";
		Tag "$FN_SPECTRE";
	}
	override void Die(Actor source, Actor inflictor, int dmgflags, Name MeansOfDeath) {
		if (MeansOfDeath == 'norma' && !burncorpse) {
			burncorpse = BD_TranslatedBurningBody(Spawn("BD_TranslatedBurningBody",pos));
			if (burncorpse) {
				burncorpse.master = self;
				burncorpse.fadestart = 50;
				burncorpse.fadedir = -1;
				burncorpse.A_SetTranslation("DarkenedDemon");
				burncorpse.transfer = true;
			}
		}
		super.Die(source, inflictor, dmgflags, MeansOfDeath);
	}
}